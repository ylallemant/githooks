#!/usr/bin/sh
#; C:/Program\ Files/Git/usr/bin/sh.exe
set -eu

# root path of the repositories holding configuration
# if there is no parent config,
# both variables have the same value
PARENT_CONFIG_REPOSITORY="$(dirname $(githook-companion config directory))"
CHILD_CONFIG_REPOSITORY="$(pwd)"
# binary dependecy directories.
# if there is no parent config,
# both variables have the same value
PARENT_BIN_DIRECTORY="$(githook-companion config dependency path)"
CHILD_BIN_DIRECTORY="$(githook-companion config dependency path --child)"
# project custom githook directory
CHILD_GITHOOKS_DIRECTORY="$(githook-companion config hook path --child)"
CHILD_CONFIG_DIRECTORY="$(githook-companion config directory --child)"

echo "apply generic prepare-commit-msg"

COMMIT_MESSAGE_FILE=$1
COMMIT_SOURCE=$2

# log some information for debugging
CHILD_LOG_FILE="$CHILD_CONFIG_DIRECTORY"/logs/prepare-commit-msg.log
echo "$(date)" > "$CHILD_LOG_FILE"
echo "-------------------------" >> "$CHILD_LOG_FILE"
echo "COMMIT_MESSAGE_FILE: $COMMIT_MESSAGE_FILE" >> "$CHILD_LOG_FILE"
echo "COMMIT_SOURCE:       $COMMIT_SOURCE" >>  "$CHILD_LOG_FILE"
echo "-------------------------" >>  "$CHILD_LOG_FILE"
githook-companion debug >>  "$CHILD_LOG_FILE"
echo "-------------------------" >>  "$CHILD_LOG_FILE"
env >>  "$CHILD_LOG_FILE"
echo "-------------------------" >>  "$CHILD_LOG_FILE"
ls -al /dev/tty*  >>  "$CHILD_LOG_FILE"

githook-companion version --semver
githook-companion git commit validate -m "$(cat $COMMIT_MESSAGE_FILE)" -o "$COMMIT_MESSAGE_FILE" < /dev/tty
